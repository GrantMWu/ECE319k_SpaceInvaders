


ARM Macro Assembler    Page 1 


    1 00000000         ; StringConversion.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; ECE319K lab 7 number to string conversions
    6 00000000         ;
    7 00000000         ; Used in ECE319K Labs 7,8,9,10. You write these two fun
                       ctions
    8 00000000         
    9 00000000         
   10 00000000                 EXPORT           Dec2String
   11 00000000                 EXPORT           Fix2String
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000         ;-----------------------Dec2String----------------------
                       -
   18 00000000         ; Convert a 32-bit number into unsigned decimal format
   19 00000000         ; String the string into the empty array add null-termin
                       ation
   20 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   21 00000000         ;        R1 pointer to empty array
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000         Dec2String
   25 00000000         ; start by putting a null termination on the stack
   26 00000000 F04F 0200       MOV              R2, #0x00
   27 00000004 B504            PUSH             {R2, LR}
   28 00000006 F000 F807       BL               findDig
   29 0000000A E8BD 4004       POP              {R2, LR}
   30 0000000E F801 2B01       STRB             R2, [R1], #1
   31 00000012 4770            BX               LR
   32 00000014         
   33 00000014         storeChar
   34 00000014 2800            CMP              R0, #0
   35 00000016 D014            BEQ              endcase
   36 00000018         findDig
   37 00000018         ;caluclate R0%10
   38 00000018 4602            MOV              R2, R0
   39 0000001A F04F 030A       MOV              R3, #10
   40 0000001E FBB2 F2F3       UDIV             R2, R2, R3
   41 00000022 FB02 F203       MUL              R2, R2, R3
   42 00000026 EBA0 0202       SUB              R2, R0, R2  ; remainder is in R
                                                            2
   43 0000002A F102 0230       ADD              R2, R2, #0x30
   44 0000002E B504            PUSH             {R2, LR}
   45 00000030 FBB0 F0F3       UDIV             R0, R0, R3
   46 00000034 F7FF FFEE       BL               storeChar
   47 00000038 E8BD 4004       POP              {R2, LR}
   48 0000003C F801 2B01       STRB             R2, [R1], #1
   49 00000040 4770            BX               LR
   50 00000042         
   51 00000042         endcase



ARM Macro Assembler    Page 2 


   52 00000042 4770            BX               LR
   53 00000044         ;* * * * * * * * End of Dec2String * * * * * * * *
   54 00000044         
   55 00000044         
   56 00000044         ; -----------------------Fix2String---------------------
                       -
   57 00000044         ; Create characters for LCD display in fixed-point forma
                       t
   58 00000044         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   59 00000044         ; Inputs:  R0 is an unsigned 32-bit number
   60 00000044         ;          R1 pointer to empty array
   61 00000044         ; Outputs: none
   62 00000044         ; E.g., R0=0,    then create "0.000 "
   63 00000044         ;       R0=3,    then create "0.003"
   64 00000044         ;       R0=89,   then create "0.089"
   65 00000044         ;       R0=123,  then create "0.123"
   66 00000044         ;       R0=9999, then create "9.999"
   67 00000044         ;       R0>9999, then create "*.***"
   68 00000044         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   69 00000044 00000000 
                       ascii   equ              0
   70 00000044         Fix2String
   71 00000044 B081            SUB              SP, #4      ; 1 byte for ascii 
                                                            char but we'll stor
                                                            e it as 4
   72 00000046 F44F 727A       MOV              R2, #1000
   73 0000004A F04F 0300       MOV              R3, #0
   74 0000004E 9B00            LDR              R3, [SP, #ascii] ;initialize as
                                                            cii with null
   75 00000050 F242 7310       MOV              R3, #10000
   76 00000054 4298            CMP              R0, R3
   77 00000056 D302            BLO              loop
   78 00000058 F04F 032A       MOV              R3, #0x2A
   79 0000005C 9300            STR              R3, [SP, #ascii] ; if ascii is 
                                                            loaded with "*" the
                                                            n we don't print th
                                                            e number
   80 0000005E         
   81 0000005E         loop
   82 0000005E 9B00            LDR              R3, [SP, #ascii]
   83 00000060 2B2A            CMP              R3, #0x2A
   84 00000062 D009            BEQ              store
   85 00000064         ; calculate leftmost digit and store into array
   86 00000064 FBB0 F3F2       UDIV             R3, R0, R2
   87 00000068 F103 0C30       ADD              R12, R3, #0x30
   88 0000006C F8CD C000       STR              R12, [SP, #ascii]
   89 00000070         ; calculate number without leftmost digit and store back
                        in R0
   90 00000070 FB03 F302       MUL              R3, R3, R2
   91 00000074 EBA0 0003       SUB              R0, R0, R3
   92 00000078         
   93 00000078         store
   94 00000078 9B00            LDR              R3, [SP, #ascii]
   95 0000007A F801 3B01       STRB             R3, [R1], #1
   96 0000007E         
   97 0000007E         ; check if decimal point is needed
   98 0000007E F5B2 7F7A       CMP              R2, #1000



ARM Macro Assembler    Page 3 


   99 00000082 D006            BEQ              addDecimal
  100 00000084         
  101 00000084         checkLoop
  102 00000084 F04F 0C0A       MOV              R12, #10
  103 00000088 FBB2 F2FC       UDIV             R2, R2, R12
  104 0000008C 2A00            CMP              R2, #0
  105 0000008E D1E6            BNE              loop
  106 00000090 E004            B                finish
  107 00000092         
  108 00000092         addDecimal
  109 00000092 F04F 0C2E       MOV              R12, #0x2E
  110 00000096 F801 CB01       STRB             R12, [R1], #1
  111 0000009A E7F3            B                checkLoop
  112 0000009C         
  113 0000009C         finish
  114 0000009C F04F 0C00       MOV              R12, #0
  115 000000A0 F8C1 C000       STR              R12, [R1]
  116 000000A4 B001            ADD              SP, #4
  117 000000A6 4770            BX               LR
  118 000000A8         
  119 000000A8         
  120 000000A8         
  121 000000A8         
  122 000000A8         
  123 000000A8         
  124 000000A8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  125 000000A8                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\stringconversion.d -o.\stringconversion.o -I.\RTE\_SpaceInva
ders -I"C:\Users\Grant Wu\AppData\Local\Arm\Packs\ARM\CMSIS\6.1.0\CMSIS\Core\In
clude" -I"C:\Users\Grant Wu\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SET
A 541" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\st
ringconversion.lst ..\inc\StringConversion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file ..\inc\StringConversion.s
   Uses
      None
Comment: .text unused
Dec2String 00000000

Symbol: Dec2String
   Definitions
      At line 24 in file ..\inc\StringConversion.s
   Uses
      At line 10 in file ..\inc\StringConversion.s
Comment: Dec2String used once
Fix2String 00000044

Symbol: Fix2String
   Definitions
      At line 70 in file ..\inc\StringConversion.s
   Uses
      At line 11 in file ..\inc\StringConversion.s
Comment: Fix2String used once
addDecimal 00000092

Symbol: addDecimal
   Definitions
      At line 108 in file ..\inc\StringConversion.s
   Uses
      At line 99 in file ..\inc\StringConversion.s
Comment: addDecimal used once
checkLoop 00000084

Symbol: checkLoop
   Definitions
      At line 101 in file ..\inc\StringConversion.s
   Uses
      At line 111 in file ..\inc\StringConversion.s
Comment: checkLoop used once
endcase 00000042

Symbol: endcase
   Definitions
      At line 51 in file ..\inc\StringConversion.s
   Uses
      At line 35 in file ..\inc\StringConversion.s
Comment: endcase used once
findDig 00000018

Symbol: findDig
   Definitions
      At line 36 in file ..\inc\StringConversion.s
   Uses
      At line 28 in file ..\inc\StringConversion.s
Comment: findDig used once
finish 0000009C

Symbol: finish



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 113 in file ..\inc\StringConversion.s
   Uses
      At line 106 in file ..\inc\StringConversion.s
Comment: finish used once
loop 0000005E

Symbol: loop
   Definitions
      At line 81 in file ..\inc\StringConversion.s
   Uses
      At line 77 in file ..\inc\StringConversion.s
      At line 105 in file ..\inc\StringConversion.s

store 00000078

Symbol: store
   Definitions
      At line 93 in file ..\inc\StringConversion.s
   Uses
      At line 84 in file ..\inc\StringConversion.s
Comment: store used once
storeChar 00000014

Symbol: storeChar
   Definitions
      At line 33 in file ..\inc\StringConversion.s
   Uses
      At line 46 in file ..\inc\StringConversion.s
Comment: storeChar used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ascii 00000000

Symbol: ascii
   Definitions
      At line 69 in file ..\inc\StringConversion.s
   Uses
      At line 74 in file ..\inc\StringConversion.s
      At line 79 in file ..\inc\StringConversion.s
      At line 82 in file ..\inc\StringConversion.s
      At line 88 in file ..\inc\StringConversion.s
      At line 94 in file ..\inc\StringConversion.s

1 symbol
346 symbols in table
